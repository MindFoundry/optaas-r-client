% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Task.R
\docType{data}
\name{Task}
\alias{Task}
\title{Task}
\format{An object of class \code{R6ClassGenerator} of length 24.}
\usage{
Task
}
\description{
Allows you to access Task attributes and perform all Task-related functions.
}
\examples{
\dontrun{
task$id  # The unique ID of the Task
task$json  # The full JSON representation of the Task in OPTaaS

# To run your task:
# First define a scoring function whose arguments are identical to your parameter names.
# The function should return a score value. 
# Then to run the task for n iterations and store the best result:
best_result <- task$run(scoring_function, n)

# Or if you prefer to do things manually:
task$generate_configuration()  # Generate a configuration
task$record_result(configuration, score)  # Record your score and return a new configuration
task$get_best_result()  # Return the result with the best score (for single-objective tasks)
task$get_pareto_set()  # Return the set of Pareto front results (for multi-objective tasks)

# To use batching (i.e. parallel score evaluation):
configurations <- task$generate_configurations(number_of_workers)
results <- your_parallel_scoring_function(configurations)
# NB results needs to be a list of (configuration$id, score) lists
next_configurations <- task$record_results(results)

# Other functions:
task$get_results()  # Get all recorded results
task$delete()  # Delete the task
}
}
\keyword{datasets}
